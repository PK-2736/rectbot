name: Deploy to Cloudflare Workers
on:
  push:
    branches:
      - "main"
    paths:
      - "backend/**"
    # frontend配下の変更ではこのworkflowはトリガーされません
      
  workflow_dispatch:

jobs:
  cloudflare-deploy:
    runs-on: ubuntu-latest
    # 統一されたAPIトークンを使用
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Check required GitHub Secrets for Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SERVICE_TOKEN: ${{ secrets.SERVICE_TOKEN }}
          RECAPTCHA_SECRET: ${{ secrets.RECAPTCHA_SECRET }}
          MAILCHANNELS_API_KEY: ${{ secrets.MAILCHANNELS_API_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SUPPORT_EMAIL: ${{ secrets.SUPPORT_EMAIL }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          echo "Checking GitHub Secrets for Workers..."
          missing=()
          for v in CLOUDFLARE_API_TOKEN CLOUDFLARE_ACCOUNT_ID JWT_SECRET SERVICE_TOKEN; do
            if [ -z "${!v}" ]; then
              echo "ERROR: Required secret $v is not set"
              missing+=("$v")
            else
              echo "OK: $v set"
            fi
          done

          # recommended
          for v in RECAPTCHA_SECRET SENTRY_DSN SUPPORT_EMAIL DISCORD_WEBHOOK_URL DISCORD_CLIENT_SECRET; do
            if [ -z "${!v}" ]; then
              echo "WARN: Recommended secret $v is not set"
            else
              echo "OK: $v set"
            fi
          done

          # optional - mail sending key
          if [ -z "${MAILCHANNELS_API_KEY:-}" ]; then
            echo "WARN: Recommended secret MAILCHANNELS_API_KEY is not set"
          else
            echo "OK: MAILCHANNELS_API_KEY set"
          fi

          if [ ${#missing[@]} -ne 0 ]; then
            echo "One or more required secrets are missing. Aborting workflow." >&2
            exit 1
          fi
      - name: Install Bun
        run: curl -fsSL https://bun.sh/install | bash
        shell: bash
      - name: Add Bun to PATH
        run: echo "$HOME/.bun/bin" >> $GITHUB_PATH
        shell: bash
      - name: Install dependencies
        run: |
          cd backend
          bun install
      - name: Install Wrangler
        run: cd backend && npm install wrangler
        
      - name: Ensure wrangler secrets from GitHub Secrets
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SERVICE_TOKEN: ${{ secrets.SERVICE_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SUPPORT_EMAIL: ${{ secrets.SUPPORT_EMAIL }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          RECAPTCHA_SECRET: ${{ secrets.RECAPTCHA_SECRET }}
          MAILCHANNELS_API_KEY: ${{ secrets.MAILCHANNELS_API_KEY }}
        run: |
          cd backend
          set -euo pipefail
          echo "Registering available secrets to Cloudflare (wrangler)..."
          # helper function: register if non-empty
          register_secret(){
            name="$1"
            value="${!2}"
            if [ -n "${value}" ]; then
              echo "Registering $name"
              # retry up to 3 times on transient failures
              attempts=0
              until [ $attempts -ge 3 ]
              do
                printf "%s" "${value}" | npx wrangler secret put "$name" && break
                attempts=$((attempts+1))
                echo "Retry $attempts for $name..."
                sleep 1
              done
            else
              echo "Skipping $name (empty)"
            fi
          }

          # register secrets (read from env variables passed to this step)
          register_secret DISCORD_CLIENT_SECRET DISCORD_CLIENT_SECRET
          register_secret JWT_SECRET JWT_SECRET
          register_secret SUPABASE_SERVICE_ROLE_KEY SUPABASE_SERVICE_ROLE_KEY
          register_secret SERVICE_TOKEN SERVICE_TOKEN
          register_secret SENTRY_DSN SENTRY_DSN
          register_secret SUPPORT_EMAIL SUPPORT_EMAIL
          register_secret DISCORD_WEBHOOK_URL DISCORD_WEBHOOK_URL
          register_secret RECAPTCHA_SECRET RECAPTCHA_SECRET
          register_secret MAILCHANNELS_API_KEY MAILCHANNELS_API_KEY

      - name: List registered wrangler secrets (for debug)
        run: |
          cd backend
          echo "Listing wrangler secrets (names only)"
          # This prints the list of secret names (no values)
          npx wrangler secret list || true

      - name: Deploy to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
          DISCORD_REDIRECT_URI: ${{ secrets.DISCORD_REDIRECT_URI }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          RECAPTCHA_SECRET: ${{ secrets.RECAPTCHA_SECRET }}
          PUBLIC_RECAPTCHA_SITE_KEY: ${{ secrets.PUBLIC_RECAPTCHA_SITE_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SUPPORT_EMAIL: ${{ secrets.SUPPORT_EMAIL }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          MAILCHANNELS_API_KEY: ${{ secrets.MAILCHANNELS_API_KEY }}
          ADMIN_DISCORD_ID: ${{ secrets.ADMIN_DISCORD_ID }}
          VPS_EXPRESS_URL: ${{ secrets.VPS_EXPRESS_URL }}
        run: |
          cd backend
          # デフォルト値を設定（Secretが空の場合）
          DISCORD_REDIRECT_URI="${DISCORD_REDIRECT_URI:-https://api.rectbot.tech/api/discord/callback}"
          VPS_EXPRESS_URL="${VPS_EXPRESS_URL:-https://80cbc750-94a4-4b87-b86d-b328b7e76779.cfargotunnel.com}"
          
          echo "Deploying with environment variables:"
          echo "  DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID:+set}"
          echo "  DISCORD_REDIRECT_URI: ${DISCORD_REDIRECT_URI}"
          echo "  VPS_EXPRESS_URL: ${VPS_EXPRESS_URL}"
          echo "  ADMIN_DISCORD_ID: ${ADMIN_DISCORD_ID:+set}"
          
          npx wrangler deploy --compatibility-date=2024-01-01 \
            --var DISCORD_CLIENT_ID:"${DISCORD_CLIENT_ID}" \
            --var DISCORD_REDIRECT_URI:"${DISCORD_REDIRECT_URI}" \
            --var SUPABASE_URL:"${SUPABASE_URL}" \
            --var PUBLIC_RECAPTCHA_SITE_KEY:"${PUBLIC_RECAPTCHA_SITE_KEY}" \
            --var ADMIN_DISCORD_ID:"${ADMIN_DISCORD_ID}" \
            --var VPS_EXPRESS_URL:"${VPS_EXPRESS_URL}"
